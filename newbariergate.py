# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'uibariergate.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5.QtWidgets import (QApplication, QWidget, QMessageBox)
from escpos.printer import Network ,Usb 
import openpyxl
from PyQt5.QtWidgets import *
from PyQt5 import QtCore, QtGui
from PyQt5.QtGui import *
from PyQt5.QtCore import *
from pyModbusTCP.client import ModbusClient # Modbus TCP Client
from PyQt5 import QtGui
from PyQt5.QtWidgets import QWidget, QApplication, QLabel, QVBoxLayout ,QMessageBox
from PyQt5.QtGui import QPixmap
import os
import sys
import cv2
from PyQt5.QtCore import pyqtSignal, pyqtSlot, Qt, QThread
import numpy as np

import time
from datetime import datetime
import getpass
from PyQt5 import QtCore, QtGui, QtWidgets
import mysql.connector
#alamat modbus motor
c = ModbusClient(host="192.168.0.32",  port=502, auto_open=True, debug=False)
#alamat modbus mobil
d = ModbusClient(host="192.168.0.33", port=502,auto_open=True, debug=False)
#pathfolder penyimpanan  
pathfolder ="C:/Users/"+ getpass.getuser() +"/Documents/parkir/"
pathimage=pathfolder+str(datetime.now().strftime("%d-%m-%y"))+"/"
xlpath=pathimage+"lapora.xlsx"
tabledatabase="tgl"+str(datetime.now().strftime("%d%m%Y"))
#create folder image perhari ini
try:
    os.mkdir(pathimage)
    print("Folder %s created!" % pathimage)
except FileExistsError:
    print("Folder %s already exists" % pathimage)
#create xlfile




try:
    wb = openpyxl.load_workbook(xlpath)
except:
    wb = openpyxl.Workbook()
    wb.save(xlpath)
    wb = openpyxl.load_workbook(xlpath)




er=1
#memmbuat tabel di database berdasarkan tgl
table="tgl"+str(datetime.now().strftime("%d%m%Y"))
#connect database
mydb = mysql.connector.connect(
  host="localhost",
  user="root",
  password="amin1234",
  database="parkir"
)
mycursor = mydb.cursor()
#create table database
try:
    #isi table sesuaikan dengan data yg mau digunakan
    mycursor.execute("CREATE TABLE "+table+" (id INT AUTO_INCREMENT PRIMARY KEY, no VARCHAR(255), tgl VARCHAR(255))")
except:
    print ("sudah ada")
#init camera
#cap2 =cv2.VideoCapture("rtsp://admin:AMIN1234@192.168.0.63:554/Streaming/Channels/102")
#cap1 =cv2.VideoCapture("rtsp://admin:amin1234@192.168.0.62:554/Streaming/Channels/102")
###icek
cap =cv2.VideoCapture("rtsp://192.168.29.139:8080/h264_ulaw.sdp")

#cap =cv2.VideoCapture("rtsp://admin:amin1234@192.168.0.64:554/Streaming/Channels/102")
#init printer
#kitchen = Network("192.168.0.8")
#kitchen1 = Network("192.168.0.7")
try:
    printer=Usb(0x04b8, 0x0202, 0, profile="TM-T88III")
except:
    print("tidak ada")
#init modbus2

#tread multitasking
class VideoThread(QThread):#turunan qtread bukan QObjek
    #mengembalikan sinyal pyqt
    change_pixmap_signal = pyqtSignal(np.ndarray)
#ConnectionResetError
    def run(self):
        # capture from web cam
        
        
        #cap =cv2.VideoCapture("rtsp://192.168.36.198:8080/h264_ulaw.sdp")

        #cap=cv2.VideoCapture("rtsp://192.168.173.3:8080/h264_ulaw.sdp")
        while True:
            #print("while true")
            
            ret, cv_img = cap.read()
           #print(cv_img)
            if ret:
               
                
                self.change_pixmap_signal.emit(cv_img)


class input1(QThread):#class qtread bukan objek
    change_input_signal = pyqtSignal(int)#signal pyqt
    
    def run(self):
        while True:
           # print("kontrol1") motor
            Alarm =  c.read_coils(0, 3)


            print('coil11 ad #0 to 9: %s' % Alarm)
            #jika ga kebaca kita panggil ulang
            if Alarm==None:
                
                return
            #percobaan status pintu
            
            if Alarm[0] == True:
                print("modbus 0 nilai 1");
                c.write_single_coil(1, 1)
                #simpan image
                cap1 =cv2.VideoCapture("rtsp://admin:amin1234@192.168.0.62:554/Streaming/Channels/102")
                #frameId = cap1.get(1)
                ret, frame = cap1.read()
                #1 motor 2 mobil
                date=str(datetime.now().strftime("%H%M%S%d%m%y"))
                filenametable="1"+date
                filename = pathimage+filenametable +".jpg"
                cv2.imwrite(filename, frame)
                cap1.release()
                #cap1.destoryAllWindows()
                # stops the camera window

                
                #simpan data base
                sql = "INSERT INTO "+table+" (no, tgl) VALUES (%s, %s)"
                val = (filenametable, date)
                mycursor.execute(sql, val)
                mydb.commit()
                #print struck
                kitchen.open()
                
                #kitchen.text(filenametable)
                date=str(datetime.now().strftime("%A %H-%M-%S %d-%M-%y"))
                #kitchen = Network("192.168.0.7", profile="TM-T88III") #Printer IP Address
                kitchen.set(align='center')
                kitchen.textln(" TIKET  PARKIR  RAWALUTUNG  LAND")
                kitchen.set(double_width=True,align='center')
                kitchen.textln("DESA WISATA PAGAK")
                kitchen.set(double_width=False,align='center')
                kitchen.textln("PURWAREJA  KLAMPOK BANJARNEGARA")
                kitchen.ln()
                kitchen.set(align='center',double_height=False)
                kitchen.textln("No Tiket:"+filenametable)
                kitchen.textln(date)
                
                kitchen.qr(filenametable)
                kitchen.textln("Rp 2.000")
                kitchen.ln()
               

                kitchen.textln("-perhatikan barang bawaan anda hilang atau rusak bukan tanggungjawab kami")
                kitchen.textln("-tiket parkir hilang wajib menunjukan stnk dan ktp")
                kitchen.textln("-karcis berlaku 1x parkir")


                kitchen.cut()

                #kirim emit ke utama
                self.change_input_signal.emit(Alarm)#mengirim sinyal
                #time.sleep(1000)
                
            if Alarm[0]== False:
                
                print("modbus 0 =0")
               
        
class input2(QThread):#class qtread bukan objek
    change_input_signal = pyqtSignal(int)#signal pyqt
    
    def run(self):
        while True:
            #print("kontrol2")
          
            Alarm1 =  d.read_coils(0, 3)
            #ret, frame = cap2.read()
            #Alarm1 = ModbusBMS1.read_holding_registers(50, 1)
         
               
            print('coil2 ad #0 to 9: %s' % Alarm1)
            if Alarm1==None:
                
                return
            if Alarm1[0] == True:
                print("modbus2 0 nilai 1");
                d.write_single_coil(1, 1)
                
                cap2 =cv2.VideoCapture("rtsp://admin:AMIN1234@192.168.0.63:554/Streaming/Channels/102")
                #frameId = cap2.get(1)
                ret, frame = cap2.read()
                date=str(datetime.now().strftime("%H%M%S%d%m%y"))
                filenametable="2"+date
                filename = pathimage+filenametable +".jpg"
                cv2.imwrite(filename, frame)
                cap2.release()
                
                # stops the camera window
                
                sql = "INSERT INTO "+table+" (no, tgl) VALUES (%s, %s)"
                val = (filenametable, date)
                mycursor.execute(sql, val)
                mydb.commit()                
                kitchen1.open()
                
                #kitchen1.text(filenametable)
                date=str(datetime.now().strftime("%A %H-%M-%S %d-%M-%y"))
                #kitchen = Network("192.168.0.7", profile="TM-T88III") #Printer IP Address
                kitchen1.set(align='center')
                kitchen1.textln(" TIKET  PARKIR  RAWALUTUNG  LAND")
                kitchen1.set(double_width=True,align='center')
                kitchen1.textln("DESA WISATA PAGAK")
                kitchen1.set(double_width=False,align='center')
                kitchen1.textln("PURWAREJA  KLAMPOK BANJARNEGARA")
                
                kitchen1.ln()
                kitchen1.set(align='center',double_height=False)
                kitchen1.textln("No Tiket:"+filenametable)
                kitchen1.textln(date)
               
                kitchen1.qr(filenametable)
                kitchen1.ln()
                kitchen1.textln("Rp 5.000")
                

                kitchen1.textln("-perhatikan barang bawaan anda hilang atau rusak bukan tanggungjawab kami")
                kitchen1.textln("-tiket parkir hilang wajib menunjukan stnk dan ktp")
                kitchen1.textln("-karcis berlaku 1x parkir")


                

                kitchen1.cut()
                #kitchen.close()
                #kitchen.barcode('1'+str(datetime.now().strftime("%d%m%y%I%M%S")), 'EAN13', 64, 2, '', '')
                self.change_input_signal.emit(Alarm1)#mengirim sinyal
            if Alarm1[0]== 0:
                print("modbus2 0 =0");
              
        



class Ui_MainWindow(object):
    v = 1
    
		
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1693, 727)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        MainWindow.setFont(font)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("QMainWindow{\n"
"    background-color: rgb(0, 0, 255);\n"
"\n"
"}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 0, 599, 400))
        self.label.setAutoFillBackground(True)
        self.label.setLineWidth(6)
        self.label.setText("")
        #self.label.setPixmap(QtGui.QPixmap("../gabungan/aset/mobil4.jpg"))#ini baru dikomen
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(1052, 0, 550, 400))
        self.label_2.setAutoFillBackground(True)
        self.label_2.setLineWidth(6)
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap(pathfolder+"aset/icon.jpg"))
        self.label_2.setObjectName("label_2")
        #LABEL IKON
        self.labelikon = QtWidgets.QLabel(self.centralwidget)
        self.labelikon.setGeometry(QtCore.QRect(1100, 430, 400, 270))
        self.labelikon.setAutoFillBackground(True)
        self.labelikon.setLineWidth(6)
        self.labelikon.setText("")
        self.labelikon.setAlignment(QtCore.Qt.AlignLeft|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignTop)
        self.labelikon.setPixmap(QtGui.QPixmap(pathfolder+"aset/icon.jpg"))
        self.labelikon.setObjectName("labelikon")

        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        font.setPointSize(15)
        self.label_5.setFont(font)
        self.label_5.setGeometry(QtCore.QRect(0, 400, 1615, 25))
        self.label_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_5.setStyleSheet("QLabel{\n"
"    background-color: rgb(255, 0, 0);\n"
"}")
        self.label_5.setText("")
        self.label_5.setObjectName("label_5")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(10, 430, 301, 281))
        self.widget.setObjectName("widget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_4 = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.label_4.setFont(font)
        self.label_4.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_4.setStyleSheet("QLabel{\n"
"    background-color: rgb(85, 255, 255);\n"
"}")
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_3.addWidget(self.label_4)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setContentsMargins(-1, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_6 = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("QLabel{\n"
"\n"
"background-color: rgb(206, 197, 186);\n"
"}\n"
"")
        self.label_6.setObjectName("label_6")
        self.verticalLayout.addWidget(self.label_6)
        self.label_7 = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("QLabel{\n"
"\n"
"background-color: rgb(249, 255, 235);\n"
"}\n"
"")
        self.label_7.setObjectName("label_7")
        self.verticalLayout.addWidget(self.label_7)
        self.label_8 = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("QLabel{\n"
"\n"
"background-color: rgb(206, 197, 186);\n"
"}\n"
"")
        self.label_8.setObjectName("label_8")
        self.verticalLayout.addWidget(self.label_8)
        self.label_9 = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("QLabel{\n"
"\n"
"background-color: rgb(249, 255, 235);\n"
"}\n"
"")
        self.label_9.setObjectName("label_9")
        self.verticalLayout.addWidget(self.label_9)
        self.horizontalLayout.addLayout(self.verticalLayout)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.noparkir = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.noparkir.setFont(font)
        self.noparkir.setStyleSheet("QLabel{\n"
"\n"
"background-color: rgb(206, 197, 186);\n"
"}\n"
"")
        self.noparkir.setObjectName("noparkir")
        self.verticalLayout_2.addWidget(self.noparkir)
        self.tanggal_masuk = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.tanggal_masuk.setFont(font)
        self.tanggal_masuk.setStyleSheet("QLabel{\n"
"\n"
"background-color: rgb(249, 255, 235);\n"
"}\n"
"")
        self.tanggal_masuk.setObjectName("tanggal_masuk")
        self.verticalLayout_2.addWidget(self.tanggal_masuk)
        self.durasiparkir = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.durasiparkir.setFont(font)
        self.durasiparkir.setStyleSheet("QLabel{\n"
"\n"
"background-color: rgb(206, 197, 186);\n"
"}\n"
"")
        self.durasiparkir.setObjectName("durasiparkir")
        self.verticalLayout_2.addWidget(self.durasiparkir)
        self.jenis_kendaraan = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.jenis_kendaraan.setFont(font)
        self.jenis_kendaraan.setStyleSheet("QLabel{\n"
"\n"
"background-color: rgb(249, 255, 235);\n"
"}\n"
"")
        self.jenis_kendaraan.setObjectName("jenis_kendaraan")
        self.verticalLayout_2.addWidget(self.jenis_kendaraan)
        self.horizontalLayout.addLayout(self.verticalLayout_2)
        self.verticalLayout_3.addLayout(self.horizontalLayout)
        self.verticalLayout_3.setStretch(1, 5)
        self.widget1 = QtWidgets.QWidget(self.centralwidget)
        self.widget1.setGeometry(QtCore.QRect(610, 10, 431, 391))
        self.widget1.setObjectName("widget1")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.widget1)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setSpacing(24)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.jam = QtWidgets.QLabel(self.widget1)
        font = QtGui.QFont()
        font.setPointSize(30)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.jam.setFont(font)
        self.jam.setAutoFillBackground(False)
        self.jam.setStyleSheet("QLabel{\n"
"background-color: rgb(212, 217, 187);\n"
"    border-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgba(255, 0, 0, 255), stop:0.339795 rgba(255, 0, 0, 255), stop:0.339799 rgba(255, 255, 255, 255), stop:0.662444 rgba(255, 255, 255, 255), stop:0.662469 rgba(0, 0, 255, 255), stop:1 rgba(0, 0, 255, 255));\n"
"    gridline-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"color: rgb(255, 0, 0);}")
        self.jam.setAlignment(QtCore.Qt.AlignCenter)
        self.jam.setObjectName("jam")
        self.verticalLayout_9.addWidget(self.jam)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setContentsMargins(1, 0, -1, -1)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.labelparkir = QtWidgets.QLabel(self.widget1)
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.labelparkir.setFont(font)
        self.labelparkir.setStyleSheet("QLabel{\n"
"\n"
"    background-color: rgb(85, 255, 255);\n"
"\n"
"}")
        self.labelparkir.setAlignment(QtCore.Qt.AlignCenter)
        self.labelparkir.setObjectName("labelparkir")
        self.verticalLayout_4.addWidget(self.labelparkir)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_17 = QtWidgets.QLabel(self.widget1)
        font = QtGui.QFont()
        font.setPointSize(25)
        font.setBold(False)
        font.setWeight(50)
        self.label_17.setFont(font)
        self.label_17.setStyleSheet("QLabel{\n"
"background-color: rgb(220, 216, 203);\n"
"    color: rgb(255, 0, 0);\n"
"}")
        self.label_17.setObjectName("label_17")
        self.horizontalLayout_3.addWidget(self.label_17)
        self.bayar_parkir = QtWidgets.QLabel(self.widget1)
        font = QtGui.QFont()
        font.setPointSize(25)
        font.setBold(False)
        font.setWeight(50)
        self.bayar_parkir.setFont(font)
        self.bayar_parkir.setStyleSheet("QLabel{\n"
"    background-color: rgb(220, 216, 203);\n"
"    color: rgb(255, 0, 0);\n"
"}")
        self.bayar_parkir.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.bayar_parkir.setObjectName("bayar_parkir")
        self.horizontalLayout_3.addWidget(self.bayar_parkir)
        self.horizontalLayout_3.setStretch(1, 2)
        self.verticalLayout_4.addLayout(self.horizontalLayout_3)
        self.pushButton_2 = QtWidgets.QPushButton(self.widget1)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setAutoFillBackground(True)
        self.pushButton_2.setObjectName("pushButton_2")
        self.verticalLayout_4.addWidget(self.pushButton_2)
        self.pushButton_2.clicked.connect(self.bayar)
        
        self.verticalLayout_9.addLayout(self.verticalLayout_4)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout_5.setContentsMargins(-1, -1, 0, -1)
        self.horizontalLayout_5.setSpacing(3)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setSpacing(0)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.label_15 = QtWidgets.QLabel(self.widget1)
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.label_15.setFont(font)
        self.label_15.setStyleSheet("QLabel{\n"
"\n"
"\n"
"background-color: rgb(85, 255, 255);\n"
"\n"
"}\n"
"")
        self.label_15.setTextFormat(QtCore.Qt.AutoText)
        self.label_15.setAlignment(QtCore.Qt.AlignCenter)
        self.label_15.setObjectName("label_15")
        self.verticalLayout_8.addWidget(self.label_15)
        self.lineEdit = QtWidgets.QLineEdit(self.widget1)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit.setFont(font)
        #test enter button2
        #self.lineEdit.returnPressed.connect(self.pushButton_2.click)
        self.lineEdit.setStyleSheet("lineEdit{\n"
"    background-color: rgb(255, 85, 255);\n"
"}")
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout_8.addWidget(self.lineEdit)
        self.pushButton = QtWidgets.QPushButton(self.widget1)
        self.pushButton.setEnabled(True)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton.setFont(font)
        self.pushButton.setAutoFillBackground(True)
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout_8.addWidget(self.pushButton)
        #pushbutton1
        self.pushButton.clicked.connect(self.cari)
        self.lineEdit.returnPressed.connect(self.pushButton.click)
        
        
        
        self.label_16 = QtWidgets.QLabel(self.widget1)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_16.setFont(font)
        self.label_16.setAlignment(QtCore.Qt.AlignCenter)
        self.label_16.setObjectName("label_16")
        self.verticalLayout_8.addWidget(self.label_16)
        self.label_16.setStyleSheet("QLabel{\n"
"\n"
"\n"
"background-color: rgb(220, 216, 203);\n"
"color: rgb(255, 0, 0);\n"
"}")
        
        self.horizontalLayout_5.addLayout(self.verticalLayout_8)
        self.verticalLayout_9.addLayout(self.horizontalLayout_5)
        self.widget2 = QtWidgets.QWidget(self.centralwidget)
        self.widget2.setGeometry(QtCore.QRect(340, 430, 281, 282))
        self.widget2.setObjectName("widget2")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.widget2)
        self.verticalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.label_3 = QtWidgets.QLabel(self.widget2)
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("QLabel{\n"
"\n"
"\n"
"background-color: rgb(85, 255, 255);\n"
"\n"
"}")
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_10.addWidget(self.label_3)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.label_10 = QtWidgets.QLabel(self.widget2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_10.setFont(font)
        self.label_10.setStyleSheet("QLabel{\n"
"\n"
"background-color: rgb(206, 197, 186);\n"
"}")
        self.label_10.setObjectName("label_10")
        self.verticalLayout_6.addWidget(self.label_10)
        self.label_11 = QtWidgets.QLabel(self.widget2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_11.setFont(font)
        self.label_11.setStyleSheet("QLabel{\n"
"background-color: rgb(249, 255, 235);\n"
"}\n"
"")
        self.label_11.setObjectName("label_11")
        self.verticalLayout_6.addWidget(self.label_11)
        self.label_12 = QtWidgets.QLabel(self.widget2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_12.setFont(font)
        self.label_12.setStyleSheet("QLabel{\n"
"\n"
"background-color: rgb(206, 197, 186);\n"
"}")
        self.label_12.setObjectName("label_12")
        self.verticalLayout_6.addWidget(self.label_12)
        self.label_13 = QtWidgets.QLabel(self.widget2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_13.setFont(font)
        self.label_13.setStyleSheet("QLabel{\n"
"background-color: rgb(249, 255, 235);\n"
"}\n"
"")
        self.label_13.setObjectName("label_13")
        self.verticalLayout_6.addWidget(self.label_13)
        self.horizontalLayout_2.addLayout(self.verticalLayout_6)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.widget2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setStyleSheet("QLineEdit{\n"
"\n"
"background-color: rgb(206, 197, 186);\n"
"}")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.verticalLayout_5.addWidget(self.lineEdit_2)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.widget2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setStyleSheet("QLineEdit{\n"
"background-color: rgb(249, 255, 235);\n"
"}\n"
"\n"
"\n"
"")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.verticalLayout_5.addWidget(self.lineEdit_3)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.widget2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setStyleSheet("QLineEdit{\n"
"\n"
"background-color: rgb(206, 197, 186);\n"
"}")
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.verticalLayout_5.addWidget(self.lineEdit_4)
        self.lineEdit_5 = QtWidgets.QLineEdit(self.widget2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setStyleSheet("QLineEdit{\n"
"background-color: rgb(249, 255, 235);\n"
"}\n"
"")
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.verticalLayout_5.addWidget(self.lineEdit_5)
        self.horizontalLayout_2.addLayout(self.verticalLayout_5)
        self.horizontalLayout_2.setStretch(1, 8)
        self.verticalLayout_10.addLayout(self.horizontalLayout_2)
        self.label_14 = QtWidgets.QLabel(self.widget2)
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.label_14.setFont(font)
        self.label_14.setStyleSheet("QLabel{\n"
"\n"
"\n"
"background-color: rgb(85, 255, 255);\n"
"\n"
"}")
        self.label_14.setAlignment(QtCore.Qt.AlignCenter)
        self.label_14.setObjectName("label_14")
        self.verticalLayout_10.addWidget(self.label_14)
        self.textEdit = QtWidgets.QTextEdit(self.widget2)
        self.textEdit.setStyleSheet("QTexEdit{\n"
"\n"
"background-color: rgb(206, 197, 186);\n"
"}")
        self.textEdit.setObjectName("textEdit")
        self.verticalLayout_10.addWidget(self.textEdit)
        self.pushButton_3 = QtWidgets.QPushButton(self.widget2)
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.savekarcis)
        #simpan karcis hilang
        self.verticalLayout_10.addWidget(self.pushButton_3)
        MainWindow.setCentralWidget(self.centralwidget)
        #self.menubar = QtWidgets.QMenuBar(MainWindow)
        #self.menubar.setGeometry(QtCore.QRect(0, 0, 1693, 21))
        #self.menubar.setObjectName("menubar")
        #self.menuseting = QtWidgets.QMenu(self.menubar)
        #self.menuseting.setObjectName("menuseting")
        #self.menutarif = QtWidgets.QMenu(self.menuseting)
        #self.menutarif.setObjectName("menutarif")
        #self.menuedit = QtWidgets.QMenu(self.menubar)
        #self.menuedit.setObjectName("menuedit")
        #MainWindow.setMenuBar(self.menubar)
       #self.statusbar = QtWidgets.QStatusBar(MainWindow)
        #self.statusbar.setObjectName("statusbar")
        #MainWindow.setStatusBar(self.statusbar)
        #self.actionmotor = QtWidgets.QAction(MainWindow)
        #self.actionmotor.setObjectName("actionmotor")
       # self.actionmobil = QtWidgets.QAction(MainWindow)
       # self.actionmobil.setObjectName("actionmobil")
       # self.menutarif.addAction(self.actionmotor)
       # self.menutarif.addAction(self.actionmobil)
       # self.menuseting.addAction(self.menutarif.menuAction())
        #self.menubar.addAction(self.menuseting.menuAction())
        #self.menubar.addAction(self.menuedit.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        #routine jam
        self.timer = QTimer()
        self.timer.timeout.connect(self.showTime)
        self.timer.start(1000)

        self.timer1 = QTimer()
        self.timer1.timeout.connect(self.showiklan)
        self.timer1.start(100)
        

        self.thread = VideoThread()
        # connect its signal to the update_image slot
        self.thread.change_pixmap_signal.connect(self.update_image)
        # start the thread
        self.thread.start()

        self.thread1 = input1()
        self.thread1.change_input_signal.connect(self.output1)
        self.thread1.start()

        self.thread2 = input2()
        self.thread2.change_input_signal.connect(self.output2)
        self.thread2.start()
    #@pyqtSlot(int)
    def output2(self,v):
        print("printer2 ngeprint")
       

    #@pyqtSlot(int)
    def output1(self,v):
        print("printer2 ngeprint")

    
        

        
    
    def input6(self,v):
        if v==1:
            path ="C:/Users/ADMIN/Documents/gabungan/aset/xl.xlsx"
            #ambil foto dansimpan
            #start waktu untuk menamai image
            start_time = time.time()
            cap =cv2.VideoCapture("rtsp://admin:amin1234@192.168.0.64:554/Streaming/Channels/102")
            frameId = cap1.get(1)  # current frame number
            ret, frame = cap.read()
            #simpan foto dengan nma waktu saat ini
            filename = pat + dd + "/image/"+str(datetime.now().strftime("%d%m%y%I%M%S"))  + ".jpg"#pathgambar
        
            #masih pakai 1 camera simpan disini
            cv2.imwrite(filename, frame)
            #membuka file exel
            wb = openpyxl.load_workbook(pathfile)
            #wb = openpyxl.Workbook()
            #baca maxrow untuk menulis ke akhir no urut di xl
            sheet = wb.active
            d=sheet.max_row 
            c1 = sheet.cell(row = d+1, column = 1)
            #menulis data ke xl saat masuk kendaraan dan menyimpan
            c1.value = str(datetime.now().strftime("%d%m%y%I%M%S"))

            c2 = sheet.cell(row= d+1 , column = 2)
            print (d)
            c2.value = str(datetime.now().strftime("%d-%m-%Y %I-%M-%S"))
            #c3 = sheet['A2']
            #c3.value = "RAHUL"
            #c4 = sheet['B2']
            #c4.value = "RAI"
            wb.save(pathfile)
           
            kitchen = Network("192.168.0.8") #Printer IP Address
            kitchen.text("Hello World\n")
            kitchen.text(str(datetime.now().strftime("%d-%m-%Y %I-%M-%S \n")))
            #kitchen.barcode('1'+str(datetime.now().strftime("%d%m%y%I%M%S")), 'EAN13', 64, 2, '', '')
            #kitchen.cut()
            print ("pintu buka")
            
            



        
            
            
            
        

        
    def showiklan(self):
        t="PASTIKAN FOTO SESUAI CEK SELALU PERSEDIAAN KERTAS DALAM PRINTER MASUK                                      PASTIKAN FOTO SESUAI CEK SELALU PERSEDIAAN KERTAS DALAM PRINTER MASUK                                                                                       "
        
        d= self.v
        self.v= d+1
        
        self.label_5.setText(t[:self.v])
        if self.v > len(t):
            self.v=0
        
        
    def showTime(self):
        start_time = time.time()
        self.jam.setText(str(datetime.now().strftime("%H:%M:%S %d:%m:%y")) )
        

   

    #@pyqtSlot(np.ndarray)
    def update_image(self, cv_img):
        """Updates the image_label with a new opencv image"""
        qt_img = self.convert_cv_qt(cv_img)
        self.label.setPixmap(qt_img)
    
    def convert_cv_qt(self, cv_img):
        """Convert from an opencv image to QPixmap"""
        rgb_image = cv2.cvtColor(cv_img, cv2.COLOR_BGR2RGB)
        h, w, ch = rgb_image.shape
        bytes_per_line = ch * w
        convert_to_Qt_format = QtGui.QImage(rgb_image.data, w, h, bytes_per_line, QtGui.QImage.Format_RGB888)
        p = convert_to_Qt_format.scaled(1024, 1024, Qt.KeepAspectRatio)
        return QPixmap.fromImage(p)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "parkir"))
        #TAMBAH IKON
        MainWindow.setWindowIcon(QtGui.QIcon('C:/Users/ADMIN/Desktop/icon.png'))
        self.label_4.setText(_translate("MainWindow", "Data kendaraan"))
        self.label_6.setText(_translate("MainWindow", "No parkir"))
        self.label_7.setText(_translate("MainWindow", "Tanggal masuk"))
        self.label_8.setText(_translate("MainWindow", "Lama parkir"))
        self.label_9.setText(_translate("MainWindow", "Jenis kendaraan"))
        self.noparkir.setText(_translate("MainWindow", ""))
        self.tanggal_masuk.setText(_translate("MainWindow", ""))
        self.durasiparkir.setText(_translate("MainWindow", ""))
        self.jenis_kendaraan.setText(_translate("MainWindow", ""))
        self.jam.setText(_translate("MainWindow", "00:00:00"))
        self.labelparkir.setText(_translate("MainWindow", "Biaya parkir"))
        self.label_17.setText(_translate("MainWindow", "Rp "))
        self.bayar_parkir.setText(_translate("MainWindow", "00000"))
        self.pushButton_2.setText(_translate("MainWindow", "Bayar"))
        self.label_15.setText(_translate("MainWindow", "No Parkir"))
        self.pushButton.setText(_translate("MainWindow", "cari"))
        self.label_16.setText(_translate("MainWindow", "status"))
        self.label_3.setText(_translate("MainWindow", "Transaksi karcis hilang"))
        self.label_10.setText(_translate("MainWindow", "jenis kendaraan"))
        self.label_11.setText(_translate("MainWindow", "nopol"))
        self.label_12.setText(_translate("MainWindow", "tgl masuk"))
        self.label_13.setText(_translate("MainWindow", "tgl keluar"))
        self.label_14.setText(_translate("MainWindow", "keterangan"))
        self.pushButton_3.setText(_translate("MainWindow", "save"))
        #self.menuseting.setTitle(_translate("MainWindow", "seting"))
        #self.menutarif.setTitle(_translate("MainWindow", "tarif"))
        #self.menuedit.setTitle(_translate("MainWindow", "edit"))
        #self.actionmotor.setText(_translate("MainWindow", "motor"))
        #self.actionmobil.setText(_translate("MainWindow", "mobil"))
    def bayar(self):
        print("bayar")
        #path = "C:/Users/"+ getpass.getuser() +"/Documents/parkir/pendapatan.xlsx"
        wb = openpyxl.load_workbook(xlpath)
        sheet = wb.active
        d=sheet.max_row+1
        tgl=str(datetime.now().strftime("%A %H-%M-%S %d-%M-%y"))
        dana=self.bayar_parkir.text()
        c1 = sheet.cell(row = d, column = 1) 
        c1.value =tgl
        c2 = sheet.cell(row= d , column = 2) 
        c2.value = int(dana)
        wb.save(xlpath)
        self.label_16.setText("transaksi sukses")


        sheet = wb.active

        total=0
        df=sheet.max_row
        print(sheet.max_row)
        for d in range(sheet.max_row-1):
            f=sheet.cell(row =d+2, column = 2)
    
            total+=f.value   
            print(total)
        self.label_16.setText(str(total))
        printer.cashdraw(2)
        
        

        
        #dg=self.bayar_parkir.text()
        #usbprinter.open()
        #kitchen1.barcode(filenametable, 'EAN13', 64, 2, '', '')
        #usbprinter.text("terimakasih")
        #usbprinter.ln()
        
       # usbprinter.text(dg)
        #usbprinter.cut()
        
        

    def savekarcis(self):
        print("kesimpan")
        if self.lineEdit_5.text=="":
            return
        if self.lineEdit_4.text=="":
            return
        if self.lineEdit_3.text=="":
            return
        if self.lineEdit_2.text=="":
            return
        if self.textEdit.toPlainText=="":
            return
        
        path = "C:/Users/"+ getpass.getuser() +"/Documents/parkir/datakarcishilang.xlsx"
        wb = openpyxl.load_workbook(path)
        sheet = wb.active
        d=sheet.max_row+1
        c1 = sheet.cell(row = d, column = 1) 
        c1.value =self.lineEdit_5.text()

        c2 = sheet.cell(row= d , column = 2) 
        c2.value = self.lineEdit_4.text()
        c3 = sheet.cell(row = d, column = 3) 
        c3.value = self.lineEdit_3.text()

        c4 = sheet.cell(row= d , column = 4) 
        c4.value = self.lineEdit_2.text()
        
        c5 = sheet.cell(row = d, column = 5) 
        c5.value =self. textEdit.toPlainText()

        c6 = sheet.cell(row = d, column = 5) 
        c6.value = str(datetime.now().strftime("%H-%M-%S %d-%m-%y"))
        

       
        wb.save(path)
        self.lineEdit_5.setText("")
           
        self.lineEdit_4.setText("")
           
        self.lineEdit_3.setText("")
           
        self.lineEdit_2.setText("")
          
        self.textEdit.setPlainText("")
           
        
        

    

    def cari(self):
        #c = ModbusClient(host="192.168.0.32",  port=502, auto_open=True, debug=False)
        #d = ModbusClient(host="192.168.0.33", port=502,auto_open=True, debug=False)
        self.bayar_parkir.setText("")
        self.jenis_kendaraan.setText("")
        self.tanggal_masuk.setText("")
        self.durasiparkir.setText("")
        self.noparkir.setText("")
        
        
        print("transaksi")
        data=self.lineEdit.text()
        print(data)
        
        
        if data=="":
            return
        tabledatabase2="tgl"+data[7:11]+"2024"
        #tambah athimage varnonconst
        pathimage2=pathfolder+data[7:9]+"-"+data[9:11]+"-"+data[11:13]+"/"
        print(pathimage2)
        
        #tampilkan foto
        self.label_2.setPixmap(QtGui.QPixmap(pathimage2+data+".jpg"))
        sql = "SELECT * FROM "+tabledatabase2 +" WHERE no ="+data
        try:

            mycursor.execute(sql)
            myresult = mycursor.fetchall()
            self.label_16.setText("TIDAK TERDAFTAR")
            
            print("tidak ditemukan")
            
            
        except:
            self.label_16.setText("TIDAK TERDAFTAR")
            return
            
        
        #MOBIL APA MOTOR membaca kode awal karcis
        try:
            noparkir=myresult[0][1]
        except :
            print("salah")
            return
        
        
        
        #ambil data karcis jam masuk
        waktu_awal = noparkir[1:13]
        print(waktu_awal)
        waktu_akhir =str(datetime.now().strftime("%H:%M:%S:%d:%m:%y"))

        waktu_awal = datetime.strptime(waktu_awal, "%H%M%S%d%m%y")
        waktu_akhir = datetime.strptime(waktu_akhir, "%H:%M:%S:%d:%m:%y")

        selisih = waktu_akhir - waktu_awal
        day=selisih.days
        print(selisih)
        #tanggalmasuk
        a=noparkir[1:3]
        b=noparkir[3:5]
        c=noparkir[5:7]
        d=noparkir[7:9]
                
        e=noparkir[9:11]
        f=noparkir[11:13]
        tmasuk=a+":"+b+":"+c+"/"+d+":"+e+":"+f

        
       
        jeniskendaraan=noparkir[0]
        #tabeldata
        


       
        if jeniskendaraan=='2':
            #kode transaksi
            day=day+1
            
            tarif=5000
            bayar=tarif*day
            self.bayar_parkir.setText(str(bayar))
            self.label_16.setText("TERDAFTAR")
            self.jenis_kendaraan.setText("MOBIL")
            self.tanggal_masuk.setText(tmasuk)
            self.durasiparkir.setText(str(selisih))
            self.noparkir.setText(noparkir)
            
            
            
                
            
            print("mobil")
        if jeniskendaraan=='1':
            day=day+1
            
            tarif=2000
            bayar=tarif*day
            self.bayar_parkir.setText(str(bayar))
            
            
            self.label_16.setText("TERDAFTAR")
            self.jenis_kendaraan.setText("MOTOR")
            self.tanggal_masuk.setText(tmasuk)
            self.durasiparkir.setText(str(selisih))
            self.noparkir.setText(noparkir)
            
            
            
            print("motor")


        

        
        
       
        #cekno karcis
        #cari didatbase
        #cari gambar dan tampilkan
        #itung biaya
        #simpan biaya ke database
        #print transaksi
        #buka palang
        




    def closeEvent(self, event):
        reply = QMessageBox.question(self, 'Window Close', 'Are you sure you want to close the window?',QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
        if reply == QMessageBox.Yes:
            event.accept()
            print('Window closed')
        else:
            event.ignore()
if __name__ == "__main__":
    #import sys
    
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
